version: '3.2'

services:
  nginx:
    image: nginx:1.19.2-alpine
    container_name: ${PROJECT_NAME}_nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./back:/var/www
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./etc/nginx/locations.conf:/etc/nginx/locations.conf
      - ./etc/nginx/ssl_redirect.conf:/etc/nginx/ssl_redirect.conf
      - ./etc/nginx/cert.conf:/etc/nginx/cert.conf
      - ./etc/nginx/site.conf:/etc/nginx/site.conf
      - ./etc/nginx/tools-enabled:/etc/nginx/tools-enabled
      - ./etc/nginx/ssl:/etc/nginx/ssl
      - ./log/nginx_log:/var/log/nginx
    depends_on:
      - php
    networks:
      default:
        ipv4_address: 172.16.238.100


  php_composer:
    image: catmodecode/php:latest
    container_name: ${PROJECT_NAME}_php_composer
    user: ${USER_ID}:${GROUP_ID}
    volumes:
      - ./back:/var/www
      - ./etc/php/php.ini:/usr/local/etc/php/php.ini
      - ./etc/php/conf.d/:/usr/local/etc/php/conf.d/
      - ./log/profiler_log:/var/log/phpprofiler
    links:
      - db
    environment:
      PHP_IDE_CONFIG: "serverName=Docker"
    command: "sh -c 'composer install && ./artisan migrate'"
    depends_on:
      - db

  php:
    restart: always
    image: catmodecode/php:latest
    container_name: ${PROJECT_NAME}_php
    user: ${USER_ID}:${GROUP_ID}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./back:/var/www
      - ./etc/php/php.ini:/usr/local/etc/php/php.ini
      - ./etc/php/conf.d/:/usr/local/etc/php/conf.d/
      - ./log/profiler_log:/var/log/phpprofiler
    links:
      - db
    environment:
      XDEBUG_CONFIG: "client_host=host.docker.internal client_port=9003"
      PHP_IDE_CONFIG: "serverName=Docker"
    depends_on:
      - db

  node:
    extra_hosts:
      - "app.com:172.16.238.100"

    restart: always
    image: catmodecode/node-quasar:latest
    container_name: ${PROJECT_NAME}_node
    volumes: 
      - ./front:/home/node/app
    ports:
      - 8080:8080
      - 4000:4000
    command: "npm run --prefix /home/node/app dev"

  node_install:
    image: node:lts-alpine3.14
    container_name: ${PROJECT_NAME}_node_i
    volumes: 
      - ./front:/home/node/app
    command: "npm i --prefix /home/node/app"

  db:
    image: postgres:13.1-alpine
    shm_size: 1g
    container_name: ${PROJECT_NAME}_db
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    restart: always
    env_file:
      - ".env"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./etc/db/my-postgres.conf:/etc/postgresql/postgresql.conf

  db_install:
    image: postgres:13.1-alpine
    shm_size: 1g
    container_name: ${PROJECT_NAME}_db_install
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    env_file:
      - ".env"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PG_DATABASE: ${PG_DATABASE}
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./etc/db/my-postgres.conf:/etc/postgresql/postgresql.conf
      - ./install-db.sh:/install-db.sh
    entrypoint: /install-db.sh
    depends_on:
      - db

  dbadmin:
    image: dpage/pgadmin4:4.28
    container_name: ${PROJECT_NAME}_dbadmin
    restart: unless-stopped
    env_file:
      - ".env"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PROXY_X_FOR_COUNT: 2
      PROXY_X_PROTO_COUNT: 1
      PROXY_X_HOST_COUNT: 1
      PROXY_X_PORT_COUNT: 2
      PROXY_X_PREFIX_COUNT: 1
    volumes:
      - ./etc/nginx-selfsigned.crt:/certs/server.cert
      - ./etc/nginx-selfsigned.key:/certs/server.key
      - ./etc/pgadmin/servers.json:/pgadmin4/servers.json
      - ./etc/pgadmin/pgpassfile:/pgadmin4/pgpassfile

  mail:
    container_name: ${PROJECT_NAME}_mail
    restart: unless-stopped
    image: eaudeweb/mailtrap
    environment:
      - MT_USER=${MT_USER}
      - MT_PASSWD=${MT_PASSWD}
      - MT_MAILBOX_LIMIT=${MT_MAILBOX_LIMIT}
      - MT_MESSAGE_LIMIT=${MT_MESSAGE_LIMIT}

  profiler:
    container_name: ${PROJECT_NAME}_profiler
    restart: unless-stopped
    image: jokkedk/webgrind:latest
    volumes:
      - ./log/profiler_log:/tmp
networks: 
  default:
    ipam:
      config:
        - subnet: 172.16.238.0/24
